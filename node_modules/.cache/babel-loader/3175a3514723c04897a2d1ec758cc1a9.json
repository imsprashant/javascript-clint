{"ast":null,"code":"var _jsxFileName = \"/home/prashant.sharma/Desktop/git/javascript-client-feature-41016/src/pages/Trainee/components/AddDialog/AddDialog.jsx\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, InputAdornment } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\nconst schema = yup.object().shape({\n  name: yup.string().required('Name is required').min(3),\n  email: yup.string().email().required('Email is required'),\n  password: yup.string().required('Password is required').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]{8,}$/, 'Must contain 8 characters at least one uppercase one lowercase and one number'),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\n});\n\nconst useStyles = () => ({\n  root: {\n    flexGrow: 1\n  }\n});\n\nclass AddDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.hasErrors = () => {\n      const {\n        hasError\n      } = this.state;\n      schema.isValid(this.state).then(valid => {\n        if (!valid !== hasError) {\n          this.setState({\n            hasError: !valid\n          });\n        }\n      });\n    };\n\n    this.isTouched = field => {\n      const {\n        touched\n      } = this.state;\n      this.setState({\n        touched: { ...touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.getError = field => {\n      const {\n        error,\n        touched\n      } = this.state;\n\n      if (touched[field]) {\n        schema.validateAt(field, this.state).then(() => {\n          if (error[field] !== '') {\n            this.setState({\n              error: { ...error,\n                [field]: ''\n              }\n            });\n          }\n        }).catch(err => {\n          if (err.message !== error[field]) {\n            this.setState({\n              error: { ...error,\n                [field]: err.message\n              }\n            });\n          }\n        });\n      }\n\n      return error[field];\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      hasError: false,\n      error: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open,\n      onClose,\n      onSubmit\n    } = this.props;\n    const {\n      name,\n      email,\n      password,\n      confirmPassword,\n      hasError,\n      error\n    } = this.state;\n    console.log(this.state);\n    this.hasErrors();\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: onClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Add TRAINEE\"), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.useStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Add your trainee details\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"Name \",\n      id: \"Name\",\n      value: name,\n      error: !!error.name,\n      fullWidth: true,\n      onChange: this.handleChange('name'),\n      helperText: this.getError('name'),\n      onBlur: () => this.isTouched('name'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(PersonIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 68\n          }\n        }))\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Email Address\",\n      id: \"email\",\n      value: email,\n      error: !!error.email,\n      fullWidth: true,\n      onChange: this.handleChange('email'),\n      helperText: this.getError('email'),\n      onBlur: () => this.isTouched('email'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 68\n          }\n        }))\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Password\",\n      id: \"outlined-start-adornment\",\n      type: \"password\",\n      value: password,\n      error: !!error.password,\n      fullWidth: true,\n      onChange: this.handleChange('password'),\n      helperText: this.getError('password'),\n      onBlur: () => this.isTouched('password'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 68\n          }\n        }))\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Confirm Password\",\n      id: \"password\",\n      type: \"password\",\n      error: !!error.confirmPassword,\n      fullWidth: true,\n      value: confirmPassword,\n      onChange: this.handleChange('confirmPassword'),\n      helperText: this.getError('confirmPassword'),\n      onBlur: () => this.isTouched('confirmPassword'),\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 68\n          }\n        }))\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: onClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => onSubmit()({\n        name,\n        email,\n        password,\n        confirmPassword\n      }),\n      disabled: hasError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withStyles(useStyles)(AddDialog);\nAddDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/prashant.sharma/Desktop/git/javascript-client-feature-41016/src/pages/Trainee/components/AddDialog/AddDialog.jsx"],"names":["React","Component","withStyles","Button","TextField","yup","PropTypes","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputAdornment","PersonIcon","EmailIcon","VisibilityOff","Grid","schema","object","shape","name","string","required","min","email","password","matches","confirmPassword","oneOf","ref","useStyles","root","flexGrow","AddDialog","constructor","props","handleChange","prop","event","setState","target","value","hasErrors","hasError","state","isValid","then","valid","isTouched","field","touched","getError","error","validateAt","catch","err","message","render","classes","open","onClose","onSubmit","console","log","startAdornment","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputAdornment\n} from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Name is required').min(3),\n  email: yup.string().email().required('Email is required'),\n  password: yup.string().required('Password is required').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]{8,}$/,\n    'Must contain 8 characters at least one uppercase one lowercase and one number'),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n});\n\nconst useStyles = () => ({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nclass AddDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      hasError: false,\n      error: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      },\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false,\n      },\n    };\n  }\n\n  handleChange = (prop) => (event) => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  hasErrors = () => {\n    const { hasError } = this.state;\n    schema\n      .isValid(this.state)\n      .then((valid) => {\n\n        if (!valid !== hasError) {\n          this.setState({ hasError: !valid });\n        }\n      });\n  }\n\n  isTouched = (field) => {\n    const { touched } = this.state;\n\n    this.setState({\n      touched: {\n        ...touched,\n        [field]: true,\n      },\n    });\n  }\n\n  getError = (field) => {\n    const { error, touched } = this.state;\n    if (touched[field]) {\n\n      schema.validateAt(field, this.state).then(() => {\n        if (error[field] !== '') {\n          this.setState({\n            error: {\n              ...error,\n              [field]: '',\n            },\n          });\n        }\n      }).catch((err) => {\n        if (err.message !== error[field]) {\n          this.setState({\n            error: {\n              ...error,\n              [field]: err.message,\n            },\n          });\n        }\n      });\n    }\n    return error[field];\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { open, onClose, onSubmit } = this.props;\n    const {\n      name, email, password, confirmPassword, hasError, error,\n    } = this.state;\n    console.log(this.state);\n    this.hasErrors();\n    return (\n      <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add TRAINEE</DialogTitle>\n        <DialogContent className={classes.useStyles}>\n          <DialogContentText>\n            Add your trainee details\n          </DialogContentText>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                label=\"Name \"\n                id=\"Name\"\n                value={name}\n                error={!!error.name}\n                fullWidth\n                onChange={this.handleChange('name')}\n                helperText={this.getError('name')}\n                onBlur={() => this.isTouched('name')}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><PersonIcon /></InputAdornment>,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Email Address\"\n                id=\"email\"\n                value={email}\n                error={!!error.email}\n                fullWidth\n                onChange={this.handleChange('email')}\n                helperText={this.getError('email')}\n                onBlur={() => this.isTouched('email')}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><EmailIcon /></InputAdornment>,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Password\"\n                id=\"outlined-start-adornment\"\n                type=\"password\"\n                value={password}\n                error={!!error.password}\n                fullWidth\n                onChange={this.handleChange('password')}\n                helperText={this.getError('password')}\n                onBlur={() => this.isTouched('password')}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><VisibilityOff /></InputAdornment>,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Confirm Password\"\n                id=\"password\"\n                type=\"password\"\n                error={!!error.confirmPassword}\n                fullWidth\n                value={confirmPassword}\n                onChange={this.handleChange('confirmPassword')}\n                helperText={this.getError('confirmPassword')}\n                onBlur={() => this.isTouched('confirmPassword')}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><VisibilityOff /></InputAdornment>,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => onSubmit()({\n              name, email, password, confirmPassword,\n            })}\n            disabled={hasError}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(AddDialog);\n\nAddDialog.propTypes = {\n\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}