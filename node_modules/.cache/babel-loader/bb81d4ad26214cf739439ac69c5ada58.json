{"ast":null,"code":"var _jsxFileName = \"/home/prashant.sharma/Desktop/git/javascript-client-feature-41016/src/components/Slider/Slider.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getNextRoundRobin, getRandomNumber } from '../../lib/utils/math';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE } from '../../configs/constants';\nimport Img from './style';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props); // console.log('inside constructor');\n\n    this.state = {\n      counter: -1\n    };\n  }\n\n  componentDidMount() {\n    // console.log('inside component did mount');\n    const {\n      banners,\n      duration,\n      random\n    } = this.props;\n    this.id = setInterval(() => {\n      // console.log('inside set time interval');\n      let {\n        counter\n      } = this.state;\n      if (random && banners.length) counter = getRandomNumber(banners.length);else if (banners.length) counter = getNextRoundRobin(banners.length, counter); // console.log('update counter',counter);\n\n      this.setState({\n        counter\n      });\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    // console.log('inside render');\n    let imagePath;\n    const {\n      altText,\n      banners,\n      defaultBanner,\n      height\n    } = this.props;\n    const {\n      counter\n    } = this.state;\n\n    if (counter === -1) {\n      if (defaultBanner) imagePath = `${PUBLIC_IMAGE_FOLDER}banners/${defaultBanner}`;else imagePath = PUBLIC_IMAGE_FOLDER + DEFAULT_BANNER_IMAGE;\n    } else imagePath = PUBLIC_IMAGE_FOLDER + banners[counter];\n\n    return /*#__PURE__*/React.createElement(Img, {\n      src: imagePath,\n      alt: altText,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banners: PropTypes.arrayOf(PropTypes.string),\n  defaultBanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool\n};\nSlider.defaultProps = {\n  altText: 'Default Banner',\n  banners: [],\n  defaultBanner: 'default.png',\n  duration: 1000,\n  height: 200,\n  random: false\n};\nexport default Slider;","map":{"version":3,"sources":["/home/prashant.sharma/Desktop/git/javascript-client-feature-41016/src/components/Slider/Slider.jsx"],"names":["React","PropTypes","getNextRoundRobin","getRandomNumber","PUBLIC_IMAGE_FOLDER","DEFAULT_BANNER_IMAGE","Img","Slider","Component","constructor","props","state","counter","componentDidMount","banners","duration","random","id","setInterval","length","setState","componentWillUnmount","clearInterval","render","imagePath","altText","defaultBanner","height","propTypes","string","arrayOf","number","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,sBAAnD;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,yBAA1D;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC;AADC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAAgC,KAAKN,KAA3C;AACA,SAAKO,EAAL,GAAUC,WAAW,CAAC,MAAM;AAC1B;AACA,UAAI;AAAEN,QAAAA;AAAF,UAAc,KAAKD,KAAvB;AAEA,UAAIK,MAAM,IAAIF,OAAO,CAACK,MAAtB,EAA8BP,OAAO,GAAGT,eAAe,CAACW,OAAO,CAACK,MAAT,CAAzB,CAA9B,KACK,IAAIL,OAAO,CAACK,MAAZ,EAAoBP,OAAO,GAAGV,iBAAiB,CAACY,OAAO,CAACK,MAAT,EAAiBP,OAAjB,CAA3B,CALC,CAO1B;;AAEA,WAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAVoB,EAUlBG,QAVkB,CAArB;AAWD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKL,EAAN,CAAb;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,SAAJ;AACA,UAAM;AACJC,MAAAA,OADI;AACKX,MAAAA,OADL;AACcY,MAAAA,aADd;AAC6BC,MAAAA;AAD7B,QAEF,KAAKjB,KAFT;AAGA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAzB;;AAEA,QAAIC,OAAO,KAAK,CAAC,CAAjB,EAAoB;AAClB,UAAIc,aAAJ,EAAmBF,SAAS,GAAI,GAAEpB,mBAAoB,WAAUsB,aAAc,EAA3D,CAAnB,KACKF,SAAS,GAAGpB,mBAAmB,GAAGC,oBAAlC;AACN,KAHD,MAGOmB,SAAS,GAAGpB,mBAAmB,GAAGU,OAAO,CAACF,OAAD,CAAzC;;AACP,wBACE,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEY,SAAV;AAAqB,MAAA,GAAG,EAAEC,OAA1B;AAAmC,MAAA,MAAM,EAAEE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9CkC;;AAgDrCpB,MAAM,CAACqB,SAAP,GAAmB;AACjBH,EAAAA,OAAO,EAAExB,SAAS,CAAC4B,MADF;AAEjBf,EAAAA,OAAO,EAAEb,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC4B,MAA5B,CAFQ;AAGjBH,EAAAA,aAAa,EAAEzB,SAAS,CAAC4B,MAHR;AAIjBd,EAAAA,QAAQ,EAAEd,SAAS,CAAC8B,MAJH;AAKjBJ,EAAAA,MAAM,EAAE1B,SAAS,CAAC8B,MALD;AAMjBf,EAAAA,MAAM,EAAEf,SAAS,CAAC+B;AAND,CAAnB;AAQAzB,MAAM,CAAC0B,YAAP,GAAsB;AACpBR,EAAAA,OAAO,EAAE,gBADW;AAEpBX,EAAAA,OAAO,EAAE,EAFW;AAGpBY,EAAAA,aAAa,EAAE,aAHK;AAIpBX,EAAAA,QAAQ,EAAE,IAJU;AAKpBY,EAAAA,MAAM,EAAE,GALY;AAMpBX,EAAAA,MAAM,EAAE;AANY,CAAtB;AAUA,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getNextRoundRobin, getRandomNumber } from '../../lib/utils/math';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE } from '../../configs/constants';\nimport Img from './style';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log('inside constructor');\n\n    this.state = {\n      counter: -1,\n\n    };\n  }\n\n  componentDidMount() {\n    // console.log('inside component did mount');\n    const { banners, duration, random } = this.props;\n    this.id = setInterval(() => {\n      // console.log('inside set time interval');\n      let { counter } = this.state;\n\n      if (random && banners.length) counter = getRandomNumber(banners.length);\n      else if (banners.length) counter = getNextRoundRobin(banners.length, counter);\n\n      // console.log('update counter',counter);\n\n      this.setState({ counter });\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    // console.log('inside render');\n    let imagePath;\n    const {\n      altText, banners, defaultBanner, height,\n    } = this.props;\n    const { counter } = this.state;\n\n    if (counter === -1) {\n      if (defaultBanner) imagePath = `${PUBLIC_IMAGE_FOLDER}banners/${defaultBanner}`;\n      else imagePath = PUBLIC_IMAGE_FOLDER + DEFAULT_BANNER_IMAGE;\n    } else imagePath = PUBLIC_IMAGE_FOLDER + banners[counter];\n    return (\n      <Img src={imagePath} alt={altText} height={height} />\n    );\n  }\n}\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banners: PropTypes.arrayOf(PropTypes.string),\n  defaultBanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool,\n};\nSlider.defaultProps = {\n  altText: 'Default Banner',\n  banners: [],\n  defaultBanner: 'default.png',\n  duration: 1000,\n  height: 200,\n  random: false,\n};\n\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}